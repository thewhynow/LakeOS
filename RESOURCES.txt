https://wiki.osdev.org/Bare_Bones     : basic kernel + bootloader
https://wiki.osdev.org/Meaty_Skeleton : project structure
https://www.youtube.com/watch?v=pfWjteMpcxE     : GDT
https://www.youtube.com/watch?v=jwulDRMQ53I     : GDT .. again (SOB)

https://www.youtube.com/watch?v=XGSOl1QZVKI : PORTS (ignore the IDT section)

https://littleosbook.github.io/#enabling-paging   : Paging
http://www.brokenthorn.com/Resources/OSDev18.html : Paging

while both of these are good for learning - provide innaccurate code
http://www.brokenthorn.com/Resources/OSDev20.html     : FDC
https://www.isdaman.com/alsos/hardware/fdc/floppy.htm : FDC
https://github.com/Novice06/Novix/blob/main/src/kernel/drivers/fdc.c#L196 : working code for FDC

for writing a FAT driver - i recommend practicing reading white papers
    Microsoft provides an excellent white paper on the subject, and 
    they provide you everything you need to write a driver and formatter.
http://download.microsoft.com/download/1/6/1/161ba512-40e2-4cc9-843a-923143f3456c/fatgen103.doc

0xC0000000	Kernel code, data, bss, etc.
            Probably too much, but we might see a 256MB kernel one day
0xD0000000	Kernel heap
            This is what we are concerned about
0xE0000000	Space reserved for device drivers
0xF0000000	Some physical memory (useful for video memory access)
            Page directory and page tables of the current process
